<?xml version="1.0"?>
<project name="YourProjectName" default="default">
  <property name="gitRepository" value="C:\Build\Projects\GitTestApp.Project\" />
  <property name="gitExe" value="C:\Program Files (x86)\Git\bin\git.exe" />
  <!--property name="nant.settings.currentframework" value="net-v4.0"/-->
  
  
    <!-- Commit the contents of the working folder to the git repository -->
    <!-- Write timestamp of build into a file. Useful for reference but also ensures there is always  
       a change to commit. This way if commit fails we know there was actually an error.  
       (git commit fails if the index is empty)  
   -->
   <target name="build.and.zip">
    <echo message="Build and Zip"/>    
    <call target="build"/>
	<call target="zip-distributable"/>
	<call target="addToGit" />
  </target>
   
  
  <target name="build" description="compiles the source code using msbuild">
    <echo message="JJ's cool echo statement"/>
    <!--echo message="Framework directory: ${nant.settings.currentframework.frameworkdirectory}"/-->
	<echo message="MsBuild Configuration: projectbuild.xml"/>
	
    <echo message="calling MSBuild.  Expect .csproj to be in source directory"/>
    <exec program="C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe">
      <!-- verbosity of output [ The available verbosity levels are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic] ]-->
      <arg value="/verbosity:normal" />
      <!-- configuration setting -->
      <arg value="/property:Configuration=Debug" />
    </exec>
  </target> 
  
  <target name="zip-distributable" description="zip up the release">
    <echo message="Creating zip for the Web Application"/>
    <zip zipfile="C:\Build\Projects\GitTestApp.Project\GitTestApp\GitTestApp\bin\GitTestApp.zip" >
      <fileset basedir="C:\Build\Projects\GitTestApp.Project\GitTestApp\GitTestApp\bin" failonempty="true">
        <include name="**/*" />
        <exclude name="**/externals/*" />
      </fileset>
    </zip>
  </target>
  
  <target name="addToGit">
    <tstamp />	
	<echo message="NAnt build successful at ${tstamp.now}" />
	<echo message="${gitRepository}" />	
	
	<!-- This check is necessary so that we don't inadvertently end up checking in files to the 
			source code	repository if the build repository doesn't exist! -->
	<if test="${not directory::exists(gitRepository + '/.git')}">
      <fail message="Git repository for build output is not initalised!" />
    </if>	
	
	
	<!-- git chekcout master -->
	<echo message="git checkout master" />
	<echo message="git checkout master" append="true" file="C:\Build\Projects\GitTestApp.Project\GitTestBuild.log"/>
    <exec append="true" workingdir="${gitRepository}" program="${gitExe}" output="C:\Build\Projects\GitTestApp.Project\GitTestBuild.log">
      <arg line="checkout" />
      <arg value="master" />
    </exec>
	
	<!-- Stage files to git index -->
	<echo message="Add the file to git repo" />
	<echo message="Add the file to git repo" append="true" file="C:\Build\Projects\GitTestApp.Project\GitTestBuild.log"/>
    <exec append="true" workingdir="${gitRepository}" program="${gitExe}" output="C:\Build\Projects\GitTestApp.Project\GitTestBuild.log">
      <arg value="checkout" />
	  <arg value="C:\Build\Projects\GitTestApp.Project\GitTestApp\GitTestApp\bin\GitTestApp.zip" />
      <arg path="${gitRepository}/." />
    </exec>
	
	<!-- Commit files -->
	<echo message="Commit to git repo" />
	<echo message="Commit to git repo" append="true" file="C:\Build\Projects\GitTestApp.Project\GitTestBuild.log"/>
    <exec append="true" workingdir="${gitRepository}" program="${gitExe}" output="C:\Build\Projects\GitTestApp.Project\GitTestBuild.log">
      <arg line="commit" />
      <arg value="-m" />
      <arg value="Successful build: ${tstamp.now}" />
    </exec>
	
	<!-- Update server info (for HTTP repositories) -->
	<echo message="update server info to git repo" />
	<echo message="update server info to git repo" append="true" file="C:\Build\Projects\GitTestApp.Project\GitTestBuild.log" />
    <exec append="true" workingdir="${gitRepository}" program="${gitExe}" output="C:\Build\Projects\GitTestApp.Project\GitTestBuild.log">
      <arg line="update-server-info" />
    </exec>
	
	<!-- pull file -->
	<echo message="pull from git repo" />
	<echo message="pull from git repo" append="true" file="C:\Build\Projects\GitTestApp.Project\GitTestBuild.log" />
    <exec append="true" workingdir="${gitRepository}" program="${gitExe}" output="C:\Build\Projects\GitTestApp.Project\GitTestBuild.log">
      <arg line="pull" />
    </exec>
  </target>
  
	<!-- Push file -->
	<echo message="push to git repo" />
	<echo message="push to git repo" append="true" file="C:\Build\Projects\GitTestApp.Project\GitTestBuild.log" />
    <exec append="true" workingdir="${gitRepository}" program="${gitExe}" output="C:\Build\Projects\GitTestApp.Project\GitTestBuild.log">
      <arg line="push" />
    </exec>
  </target>
  
</project>
